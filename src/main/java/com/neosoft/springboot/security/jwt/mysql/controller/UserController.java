package com.neosoft.springboot.security.jwt.mysql.controller;

import com.neosoft.springboot.security.jwt.mysql.model.UserRequest;
import com.neosoft.springboot.security.jwt.mysql.model.UserResponse;
import com.neosoft.springboot.security.jwt.mysql.util.JwtUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.web.bind.annotation.*;

import com.neosoft.springboot.security.jwt.mysql.model.User;
import com.neosoft.springboot.security.jwt.mysql.service.IUserService;

import java.security.Principal;
import java.util.List;

@RestController
@RequestMapping("/user")
public class UserController {
	
	@Autowired
	private IUserService  userService;

	@Autowired
	private AuthenticationManager authenticationManager;

	@Autowired
	private JwtUtil jwtUtil;
	
	
	//1. save user  data in the database table
	@PostMapping("/save")
	public ResponseEntity<String> saveUser(
			@RequestBody User user) {
	Integer id = userService.saveUser(user);
	System.out.println("idid:"+id);
	String body = "User ' "+id+" ' Saved";
				return ResponseEntity.ok(body);
		
	}


	//2. Validate User details and generate the token.
	@PostMapping("/login")
	public ResponseEntity<UserResponse>  loginUser(@RequestBody UserRequest userRequest){
		authenticationManager.authenticate(
				new UsernamePasswordAuthenticationToken(
						userRequest.getUsername(),
						userRequest.getPassword()
				));
		String token = jwtUtil.generateToken(userRequest.getUsername());
		return ResponseEntity.ok(
				new UserResponse(token, "Success!  Generated by NeoSoft-Moti"));
	}

	//3.After login only
	@PostMapping("welcome")
	public  ResponseEntity<String>  accessData(Principal principal){
		return ResponseEntity.ok("Hello User!" +principal.getName());
	}

	@GetMapping("/users")
	public ResponseEntity<?> getAllUser() {

		List<User> userList = userService.findAllUser();
		System.out.println("userList: " + userList);
		return new ResponseEntity<>(userList, userList.size() > 0 ? HttpStatus.OK : HttpStatus.NOT_FOUND);
	}

}
